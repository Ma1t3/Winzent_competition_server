uid: "ERD with DDPG attacker vs. defender with different actuators for test"
seed: 123
version: 3.4.0
schedule:
  - the_only_phase:
      environments:
        - environment:
            name: palaestrai_mosaik:MosaikEnvironment
            uid: env
            params:
              module: midas.adapter.palaestrai:Descriptor
              description_func: describe
              instance_func: get_world
              step_size: &step_size 900
              end: &end 24*60*60
              rating_function: pgasc.midas.analyze.rating_functions.default_rating_function.DefaultRatingFunction
              write_in_midas_db: True
              scenario: [ ]
              reward:
                name: pgasc.midas.rewards.reward_pgasc_v5_1:GridHealthReward
                params:
                  weight_vm_pu: 1
                  weight_all_in_service: 1
                  weight_line_loading: 1
                  weight_trafo_loading: 1
                  weight_external_grid_usage: 1
                  norm_weights: False
              params:
                name: bhv_palaestrai
                config: bhv_midas.yml
                end: *end
                step_size: *step_size
                start_date: 2017-01-01 00:00:00+0100
                with_db: True
                mosaik_params: { addr: [ 127.0.0.1, 5674 ] }
      agents:
        - name: mighty_defender
          brain:
            name: pgasc.agents.harl.ddpg.brain:PGASCDDPGBrain
            params: { "server_store_path": "./defender", "load_path": "./defender", gamma: 0.99, tau: 0.001, batch_size: 8, alpha: 0.00005, beta: 0.001, fc_dims: [ 200,150,100 ], replay_size: 1000000 }
          muscle:
            name: pgasc.agents.harl.ddpg.muscle:PGASCDDPGMuscle
            params: { "load_path": "./defender" }
          objective:
            name: pgasc.agents.harl.base.objective:DefenderObjective
            params: { }
          sensors:
            # load: p_mw_flex
            - env.Powergrid-0.0-load-0-15.p_mw_flex
            - env.Powergrid-0.0-ext_grid-14.p_mw
            - env.Powergrid-0.0-ext_grid-14.q_mvar
            - env.Powergrid-0.0-load-0-15.p_mw
            - env.Powergrid-0.0-load-0-15.q_mvar
            - env.Powergrid-0.0-load-0-15.scaling
            - env.Powergrid-0.0-load-0-15.in_service
            - env.Powergrid-0.0-sgen-0-16.p_mw
            - env.Powergrid-0.0-sgen-0-16.q_mvar
            - env.Powergrid-0.0-sgen-0-16.scaling
            - env.Powergrid-0.0-sgen-0-16.in_service
            - env.Powergrid-0.0-bus-0.va_degree
            - env.Powergrid-0.0-bus-2.vm_pu
            - env.Powergrid-0.0-line-0.in_service
            - env.Powergrid-0.0-line-0.loading_percent
            - env.Powergrid-0.0-switch-0.closed
            - env.Powergrid-0.0-trafo-0.loading_percent
            - env.Powergrid-0.0-trafo-0.in_service
            - env.Powergrid-0.0-trafo-0.tap_pos

          actuators:
            # no load scaling
            # sgen: scaling
            - env.Powergrid-0.0-load-0-15.scaling
            - env.Powergrid-0.0-sgen-0-16.scaling
            - env.Powergrid-0.0-trafo-0.tap_pos
            - env.Powergrid-0.0-switch-0.closed
        - name: evil_attacker
          brain:
            name: pgasc.agents.harl.ddpg.brain:PGASCDDPGBrain
            params: { "server_store_path": "./attacker", "load_path": "./attacker", gamma: 0.99, tau: 0.001, batch_size: 8, alpha: 0.0002, beta: 0.001, fc_dims: [ 200,150,100 ], replay_size: 1000000 }
          muscle:
            name: pgasc.agents.harl.ddpg.muscle:PGASCDDPGMuscle
            params: { "load_path": "./attacker" }
          objective:
            name: pgasc.agents.harl.base.objective:AttackerObjective
            params: { }
          sensors:
            - env.Powergrid-0.0-load-0-15.p_mw_flex
            - env.Powergrid-0.0-ext_grid-1.p_mw
            - env.Powergrid-0.0-ext_grid-13.q_mvar
            - env.Powergrid-0.0-load-9-33.p_mw
            - env.Powergrid-0.0-load-4-24.q_mvar
            - env.Powergrid-0.0-load-22-57.scaling
            - env.Powergrid-0.0-load-5-25.in_service
            - env.Powergrid-0.0-sgen-9-33.p_mw
            - env.Powergrid-0.0-sgen-7-30.p_mw_flex
            - env.Powergrid-0.0-sgen-9-33.q_mvar
            - env.Powergrid-0.0-sgen-8-32.scaling
            - env.Powergrid-0.0-sgen-9-33.in_service
            - env.Powergrid-0.0-bus-5.va_degree
            - env.Powergrid-0.0-bus-6.vm_pu
            - env.Powergrid-0.0-line-27.in_service
            - env.Powergrid-0.0-line-15.loading_percent
            - env.Powergrid-0.0-switch-2.closed
            - env.Powergrid-0.0-trafo-17.loading_percent
            - env.Powergrid-0.0-trafo-16.in_service
            - env.Powergrid-0.0-trafo-11.tap_pos

          actuators:
            # no sgen scaling
            # load: scaling
            - env.Powergrid-0.0-load-11-37.scaling
            - env.Powergrid-0.0-sgen-4-23.scaling
            - env.Powergrid-0.0-switch-2.closed
            - env.Powergrid-0.0-trafo-14.tap_pos

      simulation:
        name: palaestrai.simulation:VanillaSimController
        conditions:
          - name: palaestrai.simulation:VanillaSimControllerTerminationCondition
            params: { }
      phase_config:
        mode: test
        worker: 1
        episodes: 1
run_config:
  condition:
    name: palaestrai.experiment:VanillaRunGovernorTerminationCondition
    params: { }